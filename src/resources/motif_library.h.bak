//
//  motif_library.h
//  RNAMake
//
//  Created by Joseph Yesselman on 2/2/15.
//  Copyright (c) 2015 Joseph Yesselman. All rights reserved.
//

#ifndef __RNAMake__motif_library__
#define __RNAMake__motif_library__

#include <map>
#include <stdio.h>

// RNAMAke Headers
#include <base/types.hpp>
#include <motif/motif.h>
#include <motif/motif_type.h>
#include <resources/motif_sqlite_connection.h>
#include <structure/residue_type_set.h>

typedef std::map<String, MotifOP> StringMotifMap;

class MotifLibrary {
public:
  MotifLibrary(util::MotifType const &mtype)
      : _connection(MotifSqliteConnection(get_db_path(mtype))), _mtype(mtype) {
    _mdict = StringMotifMap();
    _rts = ResidueTypeSet();
  }

  MotifLibrary(String const &path, util::MotifType const &mtype = UNKNOWN)
      : _connection(MotifSqliteConnection(path)), _mtype(mtype) {
    _mdict = StringMotifMap();
    _rts = ResidueTypeSet();
  }

  ~MotifLibrary() {}

public:
  MotifOP const get_motif(String const &);

  void load_all(int limit = 9999);

  bool contains_motif(String const &);

public:
  size_t const size() { return _mdict.size(); }

  MotifOPs motifs() {
    MotifOPs motifs;
    for (auto const &kv : _mdict) {
      motifs.push_back(kv.second);
    }
    return motifs;
  }

private:
  String get_db_path(util::MotifType const &mtype);

private:
  MotifSqliteConnection _connection;
  util::MotifType _mtype;
  StringMotifMap _mdict;
  ResidueTypeSet _rts;
};

typedef std::shared_ptr<MotifLibrary> MotifLibraryOP;
typedef std::vector<MotifLibraryOP> MotifLibraryOPs;

MotifLibrary unique_twoway_lib();

MotifLibrary ideal_helix_lib();

#endif /* defined(__RNAMake__motif_library__) */
