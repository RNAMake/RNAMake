%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.8
%%CreationDate: Fri Jan 23 10:28:37 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAAUUGGGGGUGAGGGGUCAACAGCCGUUCAGUACCAAGUCUCAGGGGAAACUUUGAGAUGGCCUUGCAAAGGGUAUGGUAAUAAGCUGACGGACAUGGUCCUUACCCCCAGCCAAGUCCUAAGUCAACAGAUCUUCUGUUGAUAUGGAUGCAGUUC\
) def
/coor [
[400.59301758 445.93875122]
[392.60919189 433.23999023]
[394.48980713 418.35833740]
[405.38165283 408.04489136]
[420.34552002 406.97882080]
[409.22500610 396.91235352]
[398.10449219 386.84588623]
[386.98394775 376.77941895]
[375.86343384 366.71292114]
[364.74291992 356.64645386]
[353.62237549 346.57998657]
[342.50186157 336.51348877]
[331.38134766 326.44702148]
[320.26080322 316.38055420]
[309.14028931 306.31405640]
[298.01977539 296.24758911]
[285.89224243 296.52648926]
[276.54080200 288.18334961]
[275.36624146 275.30297852]
[264.44805908 265.01736450]
[251.58595276 268.70706177]
[238.47845459 265.52047729]
[228.58802795 256.18896484]
[224.58180237 243.08140564]
[227.61294556 229.60350037]
[216.90141296 219.10285950]
[206.18989563 208.60223389]
[195.47837830 198.10160828]
[188.46200562 195.65150452]
[184.66087341 187.28410339]
[174.16024780 176.57258606]
[163.65962219 165.86105347]
[153.15898132 155.14953613]
[142.13908386 144.97300720]
[130.62715149 135.35659790]
[119.11520386 125.74019623]
[107.60326385 116.12378693]
[88.88373566 123.40327454]
[67.00923157 108.18836975]
[53.17974472 102.37929535]
[39.35025787 96.57022858]
[25.52076912 90.76116180]
[11.69128036 84.95209503]
[-2.13820744 79.14302826]
[-15.96769524 73.33396149]
[-29.79718208 67.52489471]
[-43.62667084 61.71582413]
[-59.81914520 64.31117249]
[-69.95164490 51.41682053]
[-63.60073090 36.29736710]
[-47.29967117 34.50641251]
[-37.81760406 47.88633728]
[-23.98811531 53.69540405]
[-10.15862751 59.50447083]
[3.67086029 65.31353760]
[17.50034714 71.12260437]
[31.32983589 76.93167877]
[45.15932465 82.74074554]
[58.98881149 88.54981232]
[72.81829834 94.35887909]
[83.31938934 83.64687347]
[93.81956482 72.93582916]
[87.73667908 59.22457123]
[81.65380096 45.51331711]
[75.57092285 31.80205917]
[69.48804474 18.09080124]
[55.92223740 8.87662888]
[57.38873672 -7.45681524]
[72.37892914 -14.10708523]
[85.47219849 -4.23295212]
[83.19930267 12.00792217]
[89.28218079 25.71917915]
[95.36505890 39.43043518]
[101.44793701 53.14169312]
[107.53081512 66.85295105]
[122.18437958 86.61576080]
[117.21967316 104.61184692]
[128.73161316 114.22825623]
[140.24354553 123.84465790]
[151.75549316 133.46105957]
[153.34896851 118.54594421]
[165.89303589 110.32120514]
[180.20672607 114.80651855]
[185.81390381 128.71908569]
[178.61067200 141.87634277]
[163.87051392 144.64891052]
[174.37113953 155.36042786]
[184.87176514 166.07196045]
[195.37240601 176.78347778]
[205.97900391 187.39007568]
[216.69052124 197.89071655]
[227.40205383 208.39134216]
[238.11357117 218.89196777]
[254.72512817 215.84706116]
[269.73837280 223.21205139]
[277.34509277 237.91780090]
[274.73364258 254.09919739]
[285.65182495 264.38479614]
[303.64627075 268.17306519]
[308.08624268 285.12707520]
[319.20675659 295.19354248]
[330.32730103 305.26000977]
[341.44781494 315.32650757]
[352.56832886 325.39297485]
[363.68887329 335.45944214]
[374.80938721 345.52593994]
[385.92990112 355.59240723]
[397.05044556 365.65887451]
[408.17095947 375.72534180]
[419.29147339 385.79183960]
[430.41201782 395.85830688]
[442.20559692 405.12713623]
[454.61514282 413.55346680]
[469.15115356 408.45336914]
[483.73257446 412.83923340]
[492.82791138 424.82833862]
[493.11605835 439.69625854]
[505.52560425 448.12258911]
[517.93518066 456.54888916]
[530.34472656 464.97521973]
[543.22814941 460.93627930]
[555.89526367 465.01232910]
[563.77124023 475.49505615]
[564.14862061 488.40643311]
[576.38824463 497.07781982]
[588.62780762 505.74920654]
[600.86737061 514.42059326]
[613.10693359 523.09197998]
[625.34649658 531.76336670]
[637.58605957 540.43475342]
[649.82568359 549.10607910]
[662.06524658 557.77746582]
[678.48486328 562.00030518]
[678.97247314 578.94726562]
[662.82281494 584.10717773]
[653.39385986 570.01708984]
[641.15429688 561.34570312]
[628.91473389 552.67431641]
[616.67510986 544.00292969]
[604.43554688 535.33154297]
[592.19598389 526.66015625]
[579.95642090 517.98876953]
[567.71685791 509.31741333]
[555.47723389 500.64602661]
[539.06256104 504.19137573]
[524.86846924 494.60113525]
[521.91839600 477.38476562]
[509.50885010 468.95846558]
[497.09930420 460.53213501]
[484.68972778 452.10583496]
[470.76397705 457.32223511]
[456.26535034 453.29064941]
[446.81021118 441.35522461]
[446.18884277 425.96301270]
[433.77926636 417.53671265]
[436.28039551 432.32672119]
[428.83447266 445.34817505]
] def
/pairs [
[5 111]
[6 110]
[7 109]
[8 108]
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[14 102]
[15 101]
[16 100]
[19 98]
[20 97]
[25 93]
[26 92]
[27 91]
[28 90]
[30 89]
[31 88]
[32 87]
[33 86]
[34 80]
[35 79]
[36 78]
[37 77]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[112 155]
[113 154]
[117 150]
[118 149]
[119 148]
[120 147]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[132 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
